name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  push:
    tags:
      - 'v*.*.*'

jobs:
  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: raqmena_main
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v4
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, pdo, pdo_mysql, bcmath, zip, gd
      - name: Install Composer dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader
      - name: Copy .env
        run: cp .env.example .env
      - name: Generate key
        run: php artisan key:generate
      - name: Run migrations
        run: php artisan migrate --force
      - name: Run backend tests
        run: vendor/bin/phpunit

  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: Run frontend tests
        run: npm run test || true

  build-docker:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    steps:
      - uses: actions/checkout@v4
      - name: Build Laravel Docker image
        run: docker build -t raqmena-laravel ./server
      - name: Build Next.js Docker image
        run: docker build -t raqmena-nextjs ./client

  deploy:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to production
        run: |
          echo "Deploying to production server..."
          # Add your deployment script/SSH commands here
      - name: Run database migrations
        run: |
          echo "Running migrations on production..."
          # Add SSH command to run: php artisan migrate --force
      - name: Health check
        run: |
          curl -f https://your-production-domain.com/api/health || exit 1
          curl -f https://your-production-domain.com/ || exit 1 